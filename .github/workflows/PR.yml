name: Pull request build

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'

jobs:
  build:
    name: Building

    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run ubuntu tests
        if: matrix.os == 'ubuntu-latest'
        run: ./gradlew test --stacktrace

      - name: Run windows tests
        if: matrix.os == 'windows-latest'
        run: ./gradlew mingwX64Test

      - name: Run macOS tests
        if: matrix.os == 'macOS-latest'
        run: ./gradlew macosX64Test

      - name: Run ktlint
        run: ./gradlew ktlintCheck

      - name: Bundle the build report (when failure)
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: Upload the build report (when failure)
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: error-report
          path: build-reports.zip

env:
  GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=false -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"